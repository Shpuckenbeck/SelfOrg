@model SelfOrg.Models.CommentViewModel

    @{
        ViewData["Title"] = Model.post.PostName;
    }

  


<div id="headdiv">
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.post.PostName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.post.PostName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.post.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.post.User.displayedname)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.post.rating)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.post.rating)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.post.Category)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.post.Category.CatName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.post.content)
        </dt>
        <dd>
            @Html.Raw(Model.post.content)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.post.PostDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.post.PostDate)
        </dd>
        <dt>
            Теги
        </dt>
        <dd>
            <p>@await Component.InvokeAsync("PostTags", new { id = Model.post.PostID })</p>
        </dd>
    </dl>
    <button class="btn btn-default" id="showbut" >Оценить</button>
    <div id="ratediv" class="well" style="display: none; background-color: white">
        @foreach (var a in Model.crits)
        {
        <p> @a.name: </p> <b>-5</b>  <input id="rate-@a.CriterionId" class="valueslider" name="@a.CriterionId" weight="@Convert.ToInt32(a.prio)" data-slider-id="@a.CriterionId-slider" data-provide="slider" 
                                            data-slider-min="-5" data-slider-max="5" data-slider-step="1" data-slider-value="2"/><b>5</b>
        }
        <br />
        <br />
        <button class="btn btn-default" id="ratebut" onclick="submitrate(@Model.post.PostID)">Сохранить</button>
    </div>
    <hr />
</div>

<div>
<h4>Есть что добавить?</h4>
<form asp-action="viewpost" asp-controller="Comments" method="post" enctype="multipart/form-data">

    <div class="row">
        <div class="col-md-10">
            <textarea name="comment" ></textarea>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" class="btn btn-default" value="Оставить комментарий" />
        </div>
    </div>
</form>
</div>
<br />
<script>
    var appendreply = function (data)
    {
        var obj = JSON.parse(data);
        console.log(obj);
        var div = document.createElement('div');
        div.id = "comment-" + obj.id;
        div.innerHTML = obj.author + ' ответил ' + obj.date + ' : <br />' + obj.text +
            '<br /><input class="btn btn-default" type="button" id="replybut-'+obj.id+'" value="Ответить" onclick="replyto('+obj.id+')" />';
        var name = "comment-" + obj.replyto;
        document.getElementById(name).appendChild(div);

    }
</script>
<div >
    @foreach (Comment item in Model.comments)
    {
        if (item.ReplyTo == null)
        {
        <div id="comment-@item.CommentId">     
                @Html.DisplayFor(modelItem => item.User.displayedname) написал         
                @Html.DisplayFor(modelItem => item.CommentDate) :
            <br />
            @Html.Raw(@item.Text)        
        <input class="btn btn-default" type="button" id="replybut-@item.CommentId" value="Ответить" onclick="replyto(@item.CommentId)" />
            
            </div>
        }
        else
        {
          <script>
              var transcomment = {
                  "id": '@item.CommentId',
                  "author": '@item.User.displayedname',
                  "date": '@item.CommentDate',
                  "text": '@item.Text', 
                  "replyto" : '@item.ReplyTo'

              }
              var data = JSON.stringify(transcomment);
              console.log(data);
              appendreply(data);</script>
        }
        @*<div id="replydiv-@item.CommentId"></div>*@
      
    }
    </div>

@section Scripts {
    @{
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script type="text/javascript" src="~/js/tinymce/tinymce.min.js"></script>
        <script type="text/javascript" src="~/lib/seiyria-bootstrap-slider/dist/bootstrap-slider.js"></script>
        <link rel="stylesheet" href="~/lib/seiyria-bootstrap-slider/dist/css/bootstrap-slider.css" />
        <script>
tinymce.init({
                theme: "modern",
                selector: 'textarea',
                branding: false,
                width: 550,
                height: 90,
                language: 'ru',
                menubar: false,
                plugins: [
                    'advlist autolink lists link image charmap print preview anchor',
                    'searchreplace visualblocks code fullscreen',
                    'insertdatetime media textcolor colorpicker contextmenu paste code'
                ],
                toolbar: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor backcolor | bullist numlist outdent indent | link image',
                image_title: true,
                // enable automatic uploads of images represented by blob or data URIs
                automatic_uploads: true,
                // URL of our upload handler (for more details check: https://www.tinymce.com/docs/configure/file-image-upload/#images_upload_url)
                images_upload_url: 'postAcceptor.php',
                // here we add custom filepicker only to Image dialog
                file_picker_types: 'image',
                // and here's our custom image picker
                file_picker_callback: function (cb, value, meta) {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'file');
                    input.setAttribute('accept', 'image/*');

                    // Note: In modern browsers input[type="file"] is functional without
                    // even adding it to the DOM, but that might not be the case in some older
                    // or quirky browsers like IE, so you might want to add it to the DOM
                    // just in case, and visually hide it. And do not forget do remove it
                    // once you do not need it anymore.

                    input.onchange = function () {
                        var file = this.files[0];

                        var reader = new FileReader();
                        reader.readAsDataURL(file);
                        reader.onload = function () {
                            // Note: Now we need to register the blob in TinyMCEs image blob
                            // registry. In the next release this part hopefully won't be
                            // necessary, as we are looking to handle it internally.
                            var id = 'blobid' + (new Date()).getTime();
                            var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                            var blobInfo = blobCache.create(id, file, reader.result);
                            blobCache.add(blobInfo);

                            // call the callback and populate the Title field with the file name
                            cb(blobInfo.blobUri(), { title: file.name });
                        };
                    };

                    input.click();
                },
                content_css: '//www.tinymce.com/css/codepen.min.css'

            });</script>
            <script>
                var replyto = function (commentid) {
                    var div = document.createElement('div');
                    div.id = "replydiv-" + commentid;
        div.className = 'row';
                div.innerHTML = '<form id="form-' + commentid +'"><textarea id="comment-' + commentid +'"/></textarea>\
            <br />\
        <input type="hidden" name="commentid" value='+ commentid +'>\
         \
        <input class="btn btn-primary" type="button" value="Ответ" onclick="postreply('+commentid+')"></form>';
                var name = "comment-" + commentid;
                document.getElementById(name).appendChild(div);       
    }
            </script>
            <script>
                var postreply = function (id)
                {
                    var getname = "comment-" + id;
                    var test = $("textarea#" + getname).val();
                    var output = new Object();
                    output.CommentId = id;
                    output.comment = test;
                    console.log(JSON.stringify(output));
                    $.ajax({
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    type: "POST",
                    url: "/Comments/reply/",
                    data: JSON.stringify(output),
                    success: function (result)
                    {
                        console.log(output);
                    }
                }) 
                }
            </script>        

            <script>
                $('#showbut').on('click', function (e) {
                    $('#showbut')
                        .parent()
                        .find(' >.well')
                        .toggle()
                        .find('input')
                        .slider('relayout');
                    e.preventDefault();
                });
            </script>
            <script>                
                var submitrate = function (id) {

                    var postdata = [];
                    var counter = 0;
                    $('.valueslider').each(function () {
                        var name = $(this).attr('name');
                        var value = $(this).val();
                        var weight = $(this).attr('weight');
                        postdata[counter] = {
                            "criterion": name,
                            "rating": value,
                            "weight": weight,
                            "post" : id

                        }
                        console.log(postdata[counter]);
                        console.log(JSON.stringify(postdata));
                        counter++;
                        //console.log($(this).attr('id'));
                    });
                    $.ajax({
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        type: "POST",
                        url: "/Comments/rate/",
                        data: JSON.stringify(postdata),
                        success: function (result) {
                            
                        }

                    })
                }
            </script>
        await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

