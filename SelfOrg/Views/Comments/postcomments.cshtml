@model SelfOrg.Models.CommentsModel



<div id="comments">
   
    @foreach (Comment item in Model.comments)
    {

        <div id="comment-@item.CommentId" class="parentcomment">
            <div id="comrate" class="voting">
                <input type="image" src="~/images/updoot.svg" class="upvote inactive" id="uparrow" onclick="arrowchange(this)" height="12" width="12"/>
                 +1
              
                <input type="image" src="~/images/downdoot.svg" class="upvote inactive" id="downarrow" onclick="arrowchange(this)" height="12" width="12" />
            </div>
           
                <div id="info-@item.CommentId" class="info">
                    <a href="javascript:void(0)" id="toggle-@item.CommentId" onclick="togglecomment(@item.CommentId)">[-]</a>
                    @Html.DisplayFor(modelItem => item.User.displayedname) написал
                    @Html.DisplayFor(modelItem => item.CommentDate) :
                    <a href="javascript:void(0)" class="placeholder" style="display: none" onclick="togglecomment(@item.CommentId)">комментарий скрыт</a>
                </div>
                <div id="message-@item.CommentId" class="message">
                    <span> @Html.Raw(@item.Text)</span>
                    <input class="btn btn-default" type="button" id="replybut-@item.CommentId" value="Ответить" onclick="replyto(@item.CommentId)" />
                </div>
            </div>
        
        if (item.ReplyTo != null)
        {

            <script>
              var name = "message-" + "@item.ReplyTo";
              var childname = "comment-" + "@item.CommentId";
              var childdiv = document.getElementById(childname);
              childdiv.classList.remove('parentcomment');
              childdiv.classList.add('childcomment');
              document.getElementById(name).appendChild(childdiv);
            </script>

        }


    }
</div>

